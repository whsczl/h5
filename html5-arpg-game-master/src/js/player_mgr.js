/****************************************** *	玩家的管理类 *  	主要负责玩家的绘制和移动 *	@author : sherwin *  @date : 2012-03-08 *******************************************/function PlayerMgr() {	/*	 * 逻辑相关	 */	 this.left = 0;	 this.top = 0;	 // 视野中的玩家	 this.players = new Array();	 	/*	 * 绘图相关	 */	 	// 画布句柄	this.ctx = getPlayerContext();		// 图像资源	this.stopImages = new Array();	this.moveImages = new Array();	this.dieImages = new Array();	this.shadowImage = null;}/***********************	成员函数************************//****** 公有成员函数 ************/// 加载玩家的形象资源PlayerMgr.prototype.loadResource = function(loader) {	var baseName = "img/player/";	var imageExt = ".png";	var i = 0, j = 0;	// 站立资源	for(i = 0; i < 5; i++){		this.stopImages[i] = new Array();		for(j = 0; j < 6; j++) {			this.stopImages[i][j] = loader.addImage(baseName + "stop_" + (i * 6 + j).toString() + imageExt);		}	}	this.stopImages[Direction.LEFT_UP] = this.stopImages[Direction.RIGHT_UP];	this.stopImages[Direction.LEFT] = this.stopImages[Direction.RIGHT];	this.stopImages[Direction.LEFT_DOWN] = this.stopImages[Direction.RIGHT_DOWN];	// 移动资源	for(i = 0; i < 5; i++){		this.moveImages[i] = new Array();		for(j = 0; j < 6; j++) {			this.moveImages[i][j] = loader.addImage(baseName + "move_" + (1 + i * 6 + j).toString() + imageExt);		}	}	this.moveImages[Direction.LEFT_UP] = this.moveImages[Direction.RIGHT_UP];	this.moveImages[Direction.LEFT] = this.moveImages[Direction.RIGHT];	this.moveImages[Direction.LEFT_DOWN] = this.moveImages[Direction.RIGHT_DOWN];	// 死亡资源	for(i = 0; i < 5; i++){		this.dieImages[i] = new Array();		for(j = 0; j < 4; j++) {			this.dieImages[i][j] = loader.addImage(baseName + "die_" + (i * 4 + j).toString() + imageExt);		}	}	this.dieImages[Direction.LEFT_UP] = this.dieImages[Direction.RIGHT_UP];	this.dieImages[Direction.LEFT] = this.dieImages[Direction.RIGHT];	this.dieImages[Direction.LEFT_DOWN] = this.dieImages[Direction.RIGHT_DOWN];		//其他	this.shadowImage = loader.addImage("img/effect/shadow.png");}// 启动玩家管理器PlayerMgr.prototype.start = function() {	}// 添加一个玩家PlayerMgr.prototype.add = function(player) {	this.players.push(player);}// 删除玩家PlayerMgr.prototype.remove = function(playerId) {	//this.players.}// 重画所有的玩家PlayerMgr.prototype.redraw = function() {	// 清除画布	this.ctx.clearRect(0, 0, 1200, 600);	// 依次重画所有的玩家	for(var i = 0; i < this.players.length; i++)	{		this.players[i].nextAction();		this._redrawPlayer(this.players[i]);	}}/******* 私有函数 **********/PlayerMgr.prototype._redrawPlayer = function(player) {	// 画布的清除由mgr来做	var oppo = false;	if(player.direction > 4)		oppo = true;	var Image;	switch(player.state){		case PlayerState.STOP : 			Image = this.stopImages[player.direction][player.imageIndex];			break;		case PlayerState.MOVE :			Image = this.moveImages[player.direction][player.imageIndex];			break;		case PlayerState.DIE :			Image = this.dieImages[player.direction][player.imageIndex];			break;	}	drawImage(this.ctx, Image, (player.pos.x  - this.left) * grid.width, (player.pos.y - this.top) * grid.height, oppo);	drawImage(this.ctx, this.shadowImage, (player.pos.x  - this.left) * grid.width, (player.pos.y - this.top) * grid.height + 10, false);}function getPlayerContext(){	var canvas = document.getElementById("player");    var ctx = 0;	if (canvas.getContext) {		ctx = canvas.getContext("2d");	}	return ctx;}